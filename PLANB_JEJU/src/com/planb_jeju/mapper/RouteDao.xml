<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.planb_jeju.dao.RouteDao">

	<!-- 전체 수 -->
	<select id="getCount" resultType="Integer">
		
		SELECT COUNT(*)
		FROM route
	</select>
	
	<!-- 현재 경로 번호 -->
	<select id="getRouteCode" resultType="Integer">
		
		SELECT MAX(route_code)
		FROM route
		WHERE username = #{username}
		group by username
	</select>
	
	<!-- 루트한개 가져오기 -->
	<select id="getRoute" resultType="com.planb_jeju.dto.Route">
		SELECT *
		FROM route
		WHERE route_code = #{param1} AND username = #{param2}
	</select>
	
	<!-- 추천 대상 루트 여러개 가져오기 where에 personal 조건 여러개 or 로 걸려야 함 -->
	<select id="getRouteList" resultType="com.planb_jeju.dto.Route" parameterType="java.util.Map">
		
		<!--
		select * from
			(select count(pc) as countpc, rc, n from
				(select r.route_code as rc, r.username as n, rp.personal_code as pc from route r 
				join route_personal rp on r.username = rp.username 
				and r.route_code = rp.route_code
				where partner_code = 'P02' and rp.personal_code in('A0101', 'A0302')) 
			subtable group by rc, n ) 
		subtable2 where countpc=2; 
		 -->
		  <!-- SELECT rc as route_code, n as username, routename FROM
			(SELECT count(pc) as countpc, rc, n, routename 
				FROM (SELECT r.route_code as rc, r.username as n, rp.personal_code as pc, r.routename as routename 
						FROM route r join route_personal rp 
							on r.username = rp.username 
					  		and r.route_code = rp.route_code
					  	WHERE partner_code = #{partner_code} AND r.username != #{username}
					  	
				            	and rp.personal_code in
				                <foreach collection="personal_code" item="item" index="index" separator="," open="(" close=")">
				                    #{item}
				                </foreach>
				            
			)subtable group by rc, n ) 
		subtable2 WHERE countpc = #{personal_code_len}  -->
		 
		 

<!-- SELECT route_code as route_code, username as username, routename as routename FROM
	(SELECT <![CDATA[ @rownum:=@rownum+1 as rownum]]>, orderedT.route_code as route_code, orderedT.username as username, orderedT.routename as routename FROM 
			(SELECT originT.route_code, originT.username, originT.routename, route_postscript.hitnum, route_postscript.likenum FROM 
					(SELECT rc as route_code, n as username, routename FROM
								(SELECT count(pc) as countpc, rc, n, routename 
									FROM 
			                        (SELECT r.route_code as rc, r.username as n, rp.personal_code as pc, r.routename as routename 
											FROM route r join route_personal rp 
												on r.username = rp.username 
												and r.route_code = rp.route_code
											WHERE partner_code = #{partner_code} AND r.username != #{username}
											
												and rp.personal_code in 
													<foreach collection="personal_code" item="item" index="index" separator="," open="(" close=")">
									                    #{item}
									                </foreach>
												
								 )subtable group by rc, n ) 
						subtable2 WHERE countpc = #{personal_code_len}) originT left join route_postscript on 
						originT.route_code = route_postscript.route_code and originT.username = route_postscript.username
				 	
				order by hitnum desc, likenum desc , originT.route_code asc) orderedT 
	WHERE <![CDATA[ (@rownum:=0)=0) ]]> rownumedT
	       
WHERE rownumedT.rownum =1   -->


<!-- select * from
(SELECT  @rownum:=@rownum +1 as rownum, orderedT.* FROM
		(SELECT originT.route_code, originT.username, originT.routename, route_postscript.hitnum, route_postscript.likenum FROM 
					(SELECT rc as route_code, n as username, routename FROM
								(SELECT count(pc) as countpc, rc, n, routename 
									FROM 
			                        (SELECT r.route_code as rc, r.username as n, rp.personal_code as pc, r.routename as routename 
											FROM route r join route_personal rp 
												on r.username = rp.username 
												and r.route_code = rp.route_code
											WHERE partner_code = 'P01' AND r.username != 'b@naver.com'
											
												and rp.personal_code in 
													('A0101')
												
								 )subtable group by rc, n ) 
						subtable2 WHERE countpc =1) originT left join route_postscript on 
						originT.route_code = route_postscript.route_code and originT.username = route_postscript.username
				 	
				order by hitnum desc, likenum desc , originT.route_code asc)orderedT, (select @rownum:=0) r)lastT
where lastT.rownum<10; -->

		select * from
		(SELECT  @rownum:=@rownum +1 as rownum, orderedT.* FROM
				(SELECT originT.route_code, originT.username, originT.routename, route_postscript.hitnum, route_postscript.likenum FROM 
							(SELECT rc as route_code, n as username, routename FROM
										(SELECT count(pc) as countpc, rc, n, routename 
											FROM 
					                        (SELECT r.route_code as rc, r.username as n, rp.personal_code as pc, r.routename as routename 
													FROM route r join route_personal rp 
														on r.username = rp.username 
														and r.route_code = rp.route_code
													WHERE partner_code = #{partner_code} AND r.username != #{username}
													
														and rp.personal_code in 
															<foreach collection="personal_code" item="item" index="index" separator="," open="(" close=")">
											                    #{item}
											                </foreach>
														
										 )subtable group by rc, n ) 
								subtable2 WHERE countpc = #{personal_code_len}) originT left join route_postscript on 
								originT.route_code = route_postscript.route_code and originT.username = route_postscript.username
						 	
						order by hitnum desc, likenum desc , originT.route_code asc)orderedT, (select @rownum:=0) r)lastT
		where lastT.rownum &lt; 10;
		    
   </select>
	
	<!-- 내 루트 리스트 가져오기 -->
	<select id="getMyRouteList" resultType="com.planb_jeju.dto.Route">
		SELECT * 
		FROM route
		WHERE username = #{param1}
		ORDER BY route_code desc
	</select>
	
	<!-- 삭제 -->
	<delete id="delete">
	 	DELETE route WHERE route_code = #{param1} AND username = #{param2}
	</delete>
	
	<!-- 수정 -->
	<update id="update" >
		UPDATE route 
		SET routename=#{routename}, 
		    partner_code=#{partner_code},
		    sday=#{sday},
		    eday=#{eday}
		WHERE route_code = #{route_code} AND username = #{username}
	</update>
	
	<!-- 입력 -->
	<insert id="insert">
	
		<selectKey order="BEFORE" keyProperty="route_code" resultType="Int">
			select ifnull((select count(route_code)+1 from route where username=#{username} group by username), 1)
		</selectKey>
		
		INSERT INTO route(route_code, username, routename, partner_code, sday, eday, route_thumbnail)
	    VALUES( #{route_code}, #{username}, #{routename}, #{partner_code}, #{sday}, #{eday}, #{route_thumbnail})
	</insert>
	
	<!-- 취향 입력 -->
	<!-- route_personal 입력
	public int insertPersonal(Map<String, Object> map) throws ClassNotFoundException, SQLException;
	 -->
	 <insert id="insertPersonal" parameterType="java.util.Map">
			
		INSERT INTO route_personal(personal_code, username, route_code)
	    VALUES
	    <foreach collection="list" item="item" separator=",">
	    	( #{item.personal_code}, #{item.username}, #{item.route_code})
	    </foreach>
	    
	</insert>
	
</mapper>
